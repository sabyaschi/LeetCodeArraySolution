class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        if(nums1.length == 0 || nums2.length == 0){
            return new int[0];
        }

        Map<Integer,Integer> mp = new HashMap<>();
        Stack<Integer> s = new Stack<>();

        s.push(nums2[nums2.length - 1]);
        mp.put(nums2[nums2.length-1],-1);

        for(int i=nums2.length-2;i>=0;i--){
            if(s.peek() > nums2[i]){
                mp.put(nums2[i],s.peek());
                s.push(nums2[i]);
                continue;
            }

            while(!s.isEmpty() && s.peek() < nums2[i]){
                s.pop();
            }

            if(s.isEmpty()){
                 s.push(nums2[i]);
                 mp.put(nums2[i],-1);
            }
            else{
                 mp.put(nums2[i],s.peek());
                 s.push(nums2[i]);
            }
        }

        for(int i=0;i<nums1.length;i++){
            nums1[i] = mp.get(nums1[i]);
        }

        return nums1;
    }
}
