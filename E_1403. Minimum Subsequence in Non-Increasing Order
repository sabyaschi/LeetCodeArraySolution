class Solution {
    public List<Integer> minSubsequence(int[] nums) {
        List<Integer> ls = new ArrayList<Integer>();
        if (nums.length == 1) {
            ls.add(nums[0]);
            return ls;
        } else if (nums.length == 2) {
            if (nums[0] > nums[1]) {
                ls.add(nums[0]);
                return ls;
            } else if (nums[0] == nums[1]) {
                ls.add(nums[0]);
                ls.add(nums[1]);
                return ls;
            } else {
                ls.add(nums[1]);
                return ls;

            }

        }
        Arrays.sort(nums);
        ls.add(nums[nums.length - 1]);
        int sum = nums[nums.length - 1];
        int sum2 = 0;
        for (int i = 0; i < nums.length - ls.size(); i++) {
            sum2 += nums[i];
            if (sum2 >= sum) {
                sum += nums[nums.length - (ls.size() + 1)];
                ls.add(nums[nums.length - (ls.size() + 1)]);
            }
        }
        return ls;
    }
}
