/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        TreeNode tree = func(nums,0,nums.length-1);
        return tree;
    }

    public static TreeNode func(int a[], int s, int e){
        if(s>e) return null;
        if(s==e) return new TreeNode(a[s]);
        int i = maxi(a,s,e);
        TreeNode root = new TreeNode(a[i]);
        root.left = func(a,s,i-1);
        root.right = func(a,i+1,e);
        return root;
    }

    public static int maxi(int arr[],int start,int end){
        int idx = -1;
        int max = Integer.MIN_VALUE;
        for(int i = start;i<= end;i++){
            if(arr[i] > max){
                max = arr[i];
                idx = i;
            }
        }
        return idx;
    }
}
