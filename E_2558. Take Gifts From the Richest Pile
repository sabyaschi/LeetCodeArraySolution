//take more time
class Solution {
    public long pickGifts(int[] gifts, int k) {
        long ans = 0;
        Arrays.sort(gifts);
        for(int i = 1;i <= k;i++){
            int tmp  = gifts[gifts.length - 1];
            double b = Math.floor(Math.sqrt(tmp));
            gifts[gifts.length - 1] = (int) b;
            Arrays.sort(gifts);
        }
        for(int i : gifts){
            ans += i;
        }
        return ans;
    }
}
//Take less time

class Solution {
    public long pickGifts(int[] gifts, int k) {
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        long ans = 0;
        for(int i : gifts){
            pq.add(i);
        }
        for(int i = 1; i <= k;i++){
            int tmp = pq.remove();
            double a = Math.floor(Math.sqrt(tmp));
            pq.add((int)a);
        }
        for(int i=0;i < gifts.length;i++){
            ans += pq.remove();
        }
        return ans;
    }
}
